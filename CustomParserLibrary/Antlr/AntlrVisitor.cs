//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Antlr.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="AntlrParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public interface IAntlrVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="AntlrParser.ifThenElseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfThenElseBlock([NotNull] AntlrParser.IfThenElseBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AntlrParser.thenBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThenBlock([NotNull] AntlrParser.ThenBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AntlrParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseBlock([NotNull] AntlrParser.ElseBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AntlrParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIfBlock([NotNull] AntlrParser.ElseIfBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AntlrParser.assignExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignExpr([NotNull] AntlrParser.AssignExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>predicateExpr</c>
	/// labeled alternative in <see cref="AntlrParser.booleanExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredicateExpr([NotNull] AntlrParser.PredicateExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>variableCheckExpr</c>
	/// labeled alternative in <see cref="AntlrParser.booleanExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableCheckExpr([NotNull] AntlrParser.VariableCheckExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>logicExpr</c>
	/// labeled alternative in <see cref="AntlrParser.booleanExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicExpr([NotNull] AntlrParser.LogicExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>compareExpr</c>
	/// labeled alternative in <see cref="AntlrParser.booleanExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareExpr([NotNull] AntlrParser.CompareExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>variableExpr</c>
	/// labeled alternative in <see cref="AntlrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableExpr([NotNull] AntlrParser.VariableExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mathExpr</c>
	/// labeled alternative in <see cref="AntlrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMathExpr([NotNull] AntlrParser.MathExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>numberExpr</c>
	/// labeled alternative in <see cref="AntlrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberExpr([NotNull] AntlrParser.NumberExprContext context);
}
